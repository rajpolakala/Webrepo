  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v14.0\WebApplications\Microsoft.WebApplication.targets" />
16:52:44  "E:\Jenkins\b12a0dfb\workspace\_7241_DOCRDR_feature-condor-7241\EDMDocumentWS.sln" (clean;restore;rebuild target) (1) ->
16:52:44  "E:\Jenkins\b12a0dfb\workspace\_7241_DOCRDR_feature-condor-7241\EDMDocumentWS\EDMDocumentWS.vbproj" (Clean target) (2) ->
16:52:44    E:\Jenkins\b12a0dfb\workspace\_7241_DOCRDR_feature-condor-7241\EDMDocumentWS\EDMDocumentWS.vbproj(188,11): error MSB4226: The imported project "E:\tools\VS2019\MSBuild\Microsoft\VisualStudio\v14.0\WebApplications\Microsoft.WebApplication.targets" was not found. Also, tried to find "Microsoft\VisualStudio\v14.0\WebApplications\Microsoft.WebApplication.targets" in the fallback search path(s) for $(MSBuildExtensionsPath32) - "C:\Program Files (x86)\MSBuild" . These search paths are defined in "E:\tools\VS2019\MSBuild\Current\Bin\MSBuild.exe.Config". Confirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search paths.

pipeline {
    agent any
    
    stages {
        stage('Check Targets Files') {
            steps {
                script {
                    def msbuildBinPath = bat(returnStdout: true, script: 'echo %MSBuildBinPath%').trim()
                    def msbuildExtensionsPath = bat(returnStdout: true, script: 'echo %MSBuildExtensionsPath32%').trim()

                    def vbTargetsFile = "${msbuildBinPath}\\Microsoft.VisualBasic.targets"
                    def webAppTargetsFile = "${msbuildExtensionsPath}\\Microsoft\\VisualStudio\\v14.0\\WebApplications\\Microsoft.WebApplication.targets"

                    def vbTargetsExist = fileExists(vbTargetsFile)
                    def webAppTargetsExist = fileExists(webAppTargetsFile)

                    echo "Microsoft.VisualBasic.targets exists: ${vbTargetsExist}"
                    echo "Microsoft.WebApplication.targets exists: ${webAppTargetsExist}"
                }
            }
        }
    }
}


pipeline {
    agent {
        label 'MSBUILD19'
    }
    
    stages {
        stage('Clone') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                bat "MSBUILD.exe ${workspace}\\EDMDocumentWS.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
            }
        }
    }
}


Checking for existing SSH keys:

https://help.github.com/articles/checking-for-existing-ssh-keys/

Generating a new SSH key and adding it to the ssh-agent:

https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/

Adding a new SSH key to your GitHub account:

https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/

wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
 
echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list
 
apt-get update
 
apt-get install jenkins



Text Direction: Install Jenkins Slave Agents in the Cloud
Section 5, Lecture 38
Install Jenkins Agent on the Slave Node

----------------------------------------------------------------
running on master node:

sudo -iu jenkins
 
ssh root@<slave_ip> mkdir -p .ssh
 
cat .ssh/id_rsa.pub | ssh root@<slave_ip> 'cat >> .ssh/authorized_keys'
 
running on slave node:

mkdir ~/bin
 
cd bin
 
wget http://<master_ip>:8080/jnlpJars/slave.jar
 
sudo apt-get install default-jre 
start slave agent: 

ssh root@<slave_ip> java -jar /root/bin/slave.jar 











Install Jenkins Agent on the Slave Node
running on master node:

sudo -iu jenkins
 
ssh root@<slave_ip> mkdir -p .ssh
 
cat .ssh/id_rsa.pub | ssh root@<slave_ip> 'cat >> .ssh/authorized_keys'
 
running on slave node:

mkdir ~/bin
 
cd bin
 
wget http://<master_ip>:8080/jnlpJars/slave.jar
 
sudo apt-get install default-jre 
start slave agent: 

ssh root@<slave_ip> java -jar /root/bin/slave.jar




Udemy coupons -


I am happy to offer a $10 discount to my existing students for all my other Udemy courses. Happy learning!

The Complete Docker Course for DevOps and Developers (10$, Udemy Best Seller in Docker category)

https://www.udemy.com/docker-tutorial-for-devops-run-docker-containers/?couponCode=JENKINS_STUDENT

IntelliJ IDEA Tricks to Boost Productivity for Java Devs (10$)

https://www.udemy.com/intellij-idea-secrets-double-your-coding-speed-in-2-hours/?couponCode=JENKINS_STUDENT



Docker and ssh keys

URL of the Github account to fork:
hgps://github.com/jleetutorial/dockerapp
Checking for exis,ng SSH keys:
hgps://help.github.com/ar=cles/checking-for-exis=ng-ssh-keys/
Genera,ng a new SSH key and adding it to the ssh-agent:
hgps://help.github.com/ar=cles/genera=ng-a-new-ssh-key-and-adding-it-to-thessh-
agent
Adding a new SSH key to your GitHub account:
hgps://help.github.com/ar=cles/adding-a-new-ssh-key-to-your-github-account/
